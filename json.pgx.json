{
   "+grammar" : "json",
   "+toprule" : "json",
   "+version" : "0.0.1",
   "boolean" : {
      ".any" : [
         {
            ".ref" : "true"
         },
         {
            ".ref" : "false"
         }
      ]
   },
   "false" : {
      ".rgx" : "false"
   },
   "json" : {
      ".any" : [
         {
            ".ref" : "map"
         },
         {
            ".ref" : "seq"
         }
      ]
   },
   "map" : {
      ".all" : [
         {
            ".rgx" : "\\s*\\{\\s*"
         },
         {
            "+min" : 0,
            ".ref" : "pair",
            ".sep" : {
               ".rgx" : "\\s*,\\s*"
            }
         },
         {
            ".rgx" : "\\s*\\}\\s*"
         }
      ]
   },
   "node" : {
      ".any" : [
         {
            ".ref" : "map"
         },
         {
            ".ref" : "seq"
         },
         {
            ".ref" : "scalar"
         }
      ]
   },
   "null" : {
      ".rgx" : "null"
   },
   "number" : {
      ".rgx" : "(\\-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][\\-\\+]?[0-9]+)?)"
   },
   "pair" : {
      ".all" : [
         {
            ".ref" : "string"
         },
         {
            ".rgx" : "\\s*:\\s*"
         },
         {
            ".ref" : "node"
         }
      ]
   },
   "scalar" : {
      ".any" : [
         {
            ".ref" : "string"
         },
         {
            ".ref" : "number"
         },
         {
            ".ref" : "boolean"
         },
         {
            ".ref" : "null"
         }
      ]
   },
   "seq" : {
      ".all" : [
         {
            ".rgx" : "\\s*\\[\\s*"
         },
         {
            "+min" : 0,
            ".ref" : "node",
            ".sep" : {
               ".rgx" : "\\s*,\\s*"
            }
         },
         {
            ".rgx" : "\\s*\\]\\s*"
         }
      ]
   },
   "string" : {
      ".rgx" : "\"((?:\\\\\\\\|\\\\\"|[^\"\\n])*)\""
   },
   "true" : {
      ".rgx" : "true"
   }
}
